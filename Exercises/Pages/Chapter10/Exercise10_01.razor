@page "/exercise10-01"
@using Exercises.Classes.Chapter10

<h3>Genres and Films</h3>

<div class="row">
    <div class="col-7">
        @if (error != string.Empty)
        {
            <div class="form-row bottom-margin-small">
                <div class="col-11 alert alert-danger" role="alert">
                    <strong>Error</strong> @error
                </div>
            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-3">
        <div class="form-row bottom-margin-small">
            <div class="col-4">
                <input class="form-control" @bind="@newGenre" placeholder="Genre" />
            </div>
            <div class="col-auto">
                <div class="btn-group" role="group">
                    <button class="btn btn-primary btn-padding" @onclick="AddGenre">Add</button>
                    <button class="btn btn-primary btn-padding" @onclick="GenreInFilms">In Films</button>
                    <button class="btn btn-primary btn-padding" @onclick="AllGenres">All</button>
                </div>
            </div>
        </div>
        <div class="form-row">
            <ul class="list-group col-10">
                @foreach (var genre in genres)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @genre.Name
                        <span class="badge badge-primary badge-pill">@shop.FilmsUsingGenre(genre.Id)</span>
                    </li>
                }
            </ul>
        </div>
    </div>
    <div class="col-3">
        <div class="form-row bottom-margin-small">
            <div class="col-2">
                <input class="form-control" @bind="@skipFilms" placeholder="Skip" />
            </div>
            <div class="col-2">
                <input class="form-control" @bind="@takeFilms" placeholder="Take" />
            </div>
            <div class="col-3">
                <input class="form-control" @bind="@filter" placeholder="Filter" />
            </div>
            <div class="col-auto">
                <div class="btn-group" role="group">
                    <button class="btn btn-primary btn-padding" @onclick="FilterFilms">Filter</button>
                    <button class="btn btn-primary btn-padding" @onclick="UnionFilms">Union</button>
                </div>
            </div>
        </div>
        <div class="form-row bottom-margin-small">
            <div class="col-4">
                <input class="form-control" @bind="@newFilm" placeholder="Film Title" />
            </div>
            <div class="col-3">
                <input class="form-control" @bind="newYear" placeholder="Released Year" />
            </div>
            <div class="col-3">
                <select class="form-control" @bind="selectedGenre">
                    @foreach (var genre in genres)
                    {
                        <option value="@genre.Id">@genre.Name</option>
                    }
                </select>
            </div>
            <div class="col-1">
                <button class="btn btn-primary btn-padding" @onclick="AddFilm">Add</button>
            </div>
        </div>
        <div class="form-row">
            <ul class="col-11 list-group">
                @foreach (var film in films)
                {
                    <li class="list-group-item">
                        <div>
                            <strong>@film.Title</strong>
                            @foreach (var filmGenre in film.Genres.OrderBy(g => g.Name))
                            {
                                <small class="badge badge-dark badge-pill">@filmGenre.Name</small>
                            }
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

@code {
    Shop shop = new Shop(SortOrder.Ascending);
    List<Film> films = new List<Film>();
    List<Genre> genres = new List<Genre>();
    bool showAllGenres = true;
    string newGenre = string.Empty;
    string newFilm = string.Empty;
    string newYear = string.Empty;
    string error = string.Empty;
    string filter = string.Empty;
    int selectedGenre;
    string skipFilms, takeFilms;

    protected override void OnInitialized()
    {
        films = shop.Films;
        AllGenres();
    }

    void AllGenres()
    {
        error = string.Empty;
        genres = shop.Genres;
        showAllGenres = true;
    }

    void AddGenre()
    {
        try
        {
            error = string.Empty;
            shop.AddGenre(newGenre);
            if (showAllGenres) AllGenres();
            else GenreInFilms();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    void GenreInFilms()
    {
        error = string.Empty;
        genres = shop.GetGenresInFilms();
        showAllGenres = false;
    }

    void AddFilm()
    {
        try
        {
            error = string.Empty;
            var success = int.TryParse(newYear, out int year);

            shop.AddFilm(newFilm, year, selectedGenre);

            films = shop.Films;
            newFilm = string.Empty;
            newYear = string.Empty;
            selectedGenre = default;
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    void FilterFilms()
    {
        try
        {
            error = string.Empty;
            var successSkip = int.TryParse(skipFilms, out int skip);
            var successTake = int.TryParse(takeFilms, out int take);

            if (successSkip || successTake)
                films = shop.FilterFilms(filter, skip, take);
            else
                films = shop.FilterFilms(filter);
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    void UnionFilms()
    {
        try
        {
            error = string.Empty;
            films = shop.UnionFilms();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}
